name: CI Docker Compose
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      REST_SERVER_PORT: 8080
      GRPC_SERVER_PORT: 50051
      POSTGRES_USER: test
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: test
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      PG_POOL_MAX: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file
        run: |
          cat <<EOT > .env
          echo "GRPC_SHOE_PORT=50052" > .env
          echo "REST_SHOE_PORT=8081" >> .env
          echo "REST_AUTH_PORT=8080" >> .env
          echo "REST_ARTICLE_PORT=8082" >> .env
          echo "REST_RELEASE_PORT=8083" >> .env
          echo "GRPC_UPLOADER_PORT=50053" >> .env
          echo "POSTGRES_USER=test" >> .env
          echo "POSTGRES_PASSWORD=123" >> .env
          echo "POSTGRES_DB=test" >> .env
          echo "POSTGRES_HOST=postgres" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "PG_POOL_MAX=4" >> .env
          echo "TOKEN_TTL=1h" >> .env
          echo "REFRESH_TOKEN_TTL=24h" >> .env
          echo "REDIS_PORT=6379" >> .env
          EOT

      - name: Build and start services
        run: docker compose --env-file .env up --build -d

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            if docker compose exec -T postgres pg_isready -U $POSTGRES_USER -d $POSTGRES_DB; then
              echo "PostgreSQL is ready"
              exit 0
            fi
            sleep 5
          done
          echo "PostgreSQL did not become ready in time"
          exit 1

      - name: Check containers status
        run: |
          if [ "$(docker compose ps --services --filter 'status=running' | wc -l)" -ne "$(docker compose ps --services | wc -l)" ]; then
            echo "Some containers are not running"
            docker compose ps
            exit 1
          fi

      - name: Show logs if failed
        if: failure()
        run: docker compose logs

      - name: Shutdown
        if: always()
        run: docker compose down -v