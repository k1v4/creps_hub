name: CI Docker Compose
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GRPC_SHOE_PORT: 50052
      REST_SHOE_PORT: 8081
      REST_AUTH_PORT: 8080
      REST_ARTICLE_PORT: 8082
      REST_RELEASE_PORT: 8083
      GRPC_UPLOADER_PORT: 50053
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: test
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      PG_POOL_MAX: 4
      TOKEN_TTL: 1h
      REFRESH_TOKEN_TTL: 24h
      REDIS_PORT: 6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file
        run: |
          echo "GRPC_SHOE_PORT=50052" > .env
          echo "REST_SHOE_PORT=8081" >> .env
          echo "REST_AUTH_PORT=8080" >> .env
          echo "REST_ARTICLE_PORT=8082" >> .env
          echo "REST_RELEASE_PORT=8083" >> .env
          echo "GRPC_UPLOADER_PORT=50053" >> .env
          echo "POSTGRES_USER=root" >> .env
          echo "POSTGRES_PASSWORD=123" >> .env
          echo "POSTGRES_DB=test" >> .env
          echo "POSTGRES_HOST=postgres" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "PG_POOL_MAX=4" >> .env
          echo "TOKEN_TTL=1h" >> .env
          echo "REFRESH_TOKEN_TTL=24h" >> .env
          echo "REDIS_PORT=6379" >> .env

      - name: Build and start services
        run: docker compose up --build

      - name: Wait for PostgreSQL to become healthy
        run: |
          for i in {1..10}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' $(docker-compose ps -q db))
            echo "Health status: $STATUS"
            if [ "$STATUS" == "healthy" ]; then
              echo "PostgreSQL is healthy"
              exit 0
            fi
            sleep 5
          done
          echo "PostgreSQL did not become healthy in time"
          docker-compose logs
          exit 1

      - name: Check app container status
        run: |
          STATUS=$(docker inspect --format='{{.State.Running}}' $(docker-compose ps -q app))
          if [ "$STATUS" != "true" ]; then
            echo "App container is not running"
            docker-compose logs
            exit 1
          fi

      - name: Show logs (on failure)
        if: failure()
        run: docker compose logs

      - name: Shutdown
        run: docker compose down

